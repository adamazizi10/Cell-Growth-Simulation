{"ast":null,"code":"var _jsxFileName = \"/Users/adamazizi/Desktop/nicehellohi/Cell-Growth-Simulation/src/components/Controls/Controls.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Controls = ({\n  isRunning,\n  intervalTime,\n  rows,\n  cols,\n  handleIntervalChange,\n  handleRowChange,\n  handleColChange,\n  startSimulation,\n  pauseSimulation,\n  resetSimulation\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"controls\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-btns-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"button for starting and pausing the simulation\",\n      className: `start-stop-btn ${isRunning ? 'btn-blue' : 'btn-green'}`,\n      onClick: isRunning ? pauseSimulation : startSimulation,\n      children: isRunning ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      title: \"button for resetting the simulation\",\n      className: \"reset-btn btn-red\",\n      onClick: resetSimulation,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-and-grid-container\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"time-and-grid-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"interval-input\",\n        children: \"Interval (ms):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        title: \"This is the input field for the time interval\",\n        id: \"interval-input\",\n        className: `time-and-grid-input ${isRunning ? 'readonly' : ''}`,\n        type: \"number\",\n        min: \"1000\",\n        max: \"20000\",\n        step: \"500\",\n        value: intervalTime,\n        readOnly: isRunning,\n        onChange: handleIntervalChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rows-input\",\n        children: \"Grid Size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        title: \"This is the input field for the number of rows in the grid\",\n        id: \"rows-input\",\n        className: `time-and-grid-input ${isRunning ? 'readonly' : ''}`,\n        type: \"number\",\n        min: \"1\",\n        max: \"50\",\n        value: rows,\n        readOnly: isRunning,\n        onChange: handleRowChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \" \\xA0x\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        title: \"This is the input field for the number of columns in the grid\",\n        id: \"cols-input\",\n        className: `time-and-grid-input ${isRunning ? 'readonly' : ''}`,\n        type: \"number\",\n        min: \"1\",\n        max: \"50\",\n        value: cols,\n        readOnly: isRunning,\n        onChange: handleColChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this);\n_c = Controls;\nexport default Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Controls","isRunning","intervalTime","rows","cols","handleIntervalChange","handleRowChange","handleColChange","startSimulation","pauseSimulation","resetSimulation","className","children","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","min","max","step","value","readOnly","onChange","_c","$RefreshReg$"],"sources":["/Users/adamazizi/Desktop/nicehellohi/Cell-Growth-Simulation/src/components/Controls/Controls.tsx"],"sourcesContent":["import React from 'react';\n\n\ninterface ControlsProps {\n    isRunning: boolean;\n    intervalTime: number;\n    rows: number;\n    cols: number;\n    handleIntervalChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    handleRowChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    handleColChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    startSimulation: () => void;\n    pauseSimulation: () => void;\n    resetSimulation: () => void;\n}\n\n\nconst Controls: React.FC<ControlsProps> = ({\n    isRunning,\n    intervalTime,\n    rows,\n    cols,\n    handleIntervalChange,\n    handleRowChange,\n    handleColChange,\n    startSimulation,\n    pauseSimulation,\n    resetSimulation,\n}) => (\n    <div className=\"controls\">\n        <div className='main-btns-container'>\n            <button title=\"button for starting and pausing the simulation\" className={`start-stop-btn ${isRunning ? 'btn-blue' : 'btn-green'}`} onClick={isRunning ? pauseSimulation : startSimulation}>\n                {isRunning ? 'Pause' : 'Start'}\n            </button>\n            <button title=\"button for resetting the simulation\" className='reset-btn btn-red' onClick={resetSimulation}>Reset</button>\n        </div>\n        <div className='time-and-grid-container'>\n            <label className='time-and-grid-label'>\n                <label htmlFor='interval-input'>Interval (ms):</label>\n                <input\n                    title=\"This is the input field for the time interval\"\n                    id='interval-input'\n                    className={`time-and-grid-input ${isRunning ? 'readonly' : ''}`}\n                    type=\"number\"\n                    min=\"1000\"\n                    max=\"20000\"\n                    step=\"500\"\n                    value={intervalTime}\n                    readOnly={isRunning}\n                    onChange={handleIntervalChange}\n                />&nbsp;\n                <label htmlFor='rows-input'>Grid Size:</label>\n                <input\n                    title=\"This is the input field for the number of rows in the grid\"\n                    id='rows-input'\n                    className={`time-and-grid-input ${isRunning ? 'readonly' : ''}`}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"50\"\n                    value={rows}\n                    readOnly={isRunning}\n                    onChange={handleRowChange}\n                /> &nbsp;x&nbsp;\n                <input\n                    title=\"This is the input field for the number of columns in the grid\"\n                    id='cols-input'\n                    className={`time-and-grid-input ${isRunning ? 'readonly' : ''}`}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"50\"\n                    value={cols}\n                    readOnly={isRunning}\n                    onChange={handleColChange}\n                />\n            </label>\n        </div>\n    </div >\n);\n\n\nexport default Controls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}